version: '3.7'

networks:
  wp-lan:

volumes:
  mysql_db:
  prometheus_data:
  grafana_data:

services:
  nginx:
    build: 
      context: .
      dockerfile: nginx.Dockerfile
    hostname: wp-nginx
    container_name: wp-nginx
    volumes:
      - "./wp:${NGINX_ROOT_DIR}"
    ports:
      - 80:80
    networks:
      - wp-lan
    depends_on:
      - php-fpm

  php-fpm:
    image: php:7.2-fpm-alpine3.8
    hostname: wp-php-fpm
    container_name: wp-php-fpm
    volumes:
      - "./wp:${NGINX_ROOT_DIR}"
    networks:
      - wp-lan
    restart: always
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    hostname: wp-mysql
    container_name: wp-mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#    env_file: .env
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - "mysql_db:/var/lib/mysql"
    networks:
      - wp-lan
    restart: always
    logging:
      driver: none

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    hostname: wp-phpmyadmin
    container_name: wp-phpmyadmin
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - 8888:80
    networks:
      - wp-lan
    depends_on:
      - mysql
    logging:
      driver: none

  prometheus:
    image: prom/prometheus:v2.3.1
    hostname: wp-prometheus
    container_name: wp-prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - wp-lan
    restart: always

  alertmanager:
    image: prom/alertmanager:v0.15.0
    hostname: wp-alertmanager
    container_name: wp-alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - wp-lan
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana:5.2.1
    hostname: wp-grafana
    container_name: wp-grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - wp-lan
    restart: always

  blackbox-exporter:
    image: prom/blackbox-exporter
    hostname: wp-blackbox-exporter
    container_name: wp-blackbox-exporter
    volumes:
      - ./blackbox_exporter/config/:/etc/blackbox_exporter/
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    ports:
      - 9115:9115
    networks:
      - wp-lan

#  alertmanager-bot:
#    image: metalmatze/alertmanager-bot:0.3.1
#    hostname: wp-alertmanager-bot
#    container_name: wp-alertmanager-bot
#    environment:
#      ALERTMANAGER_URL: http://wp-alertmanager:9093
#      BOLT_PATH: /data/bot.db
#      STORE: bolt
#      LISTEN_ADDR: 0.0.0.0:8081
#      TELEGRAM_ADMIN: '641350757'
#      TELEGRAM_TOKEN: 774481697:AAHTAAN4JUHjTBcQsT_8Y4mpYk7sLmUs7Hs
#      TEMPLATE_PATHS: /templates/default.tmpl
#    ports:
#      - 8081:8081
#    volumes:
#      - ./alertmanager-bot:/data
#    networks:
#      - wp-lan
#    depends_on:
#      - alertmanager
#    restart: always
#
  mysql-exporter:
    image: prom/mysqld-exporter
    hostname: wp-mysql-exporter
    container_name: wp-mysql-exporter
    environment:
      - DATA_SOURCE_NAME=monitor:P@ssw0rd@(wp-mysql:3306)/test"
    ports:
      - 9104:9104
    networks:
      - wp-lan
    restart: always

