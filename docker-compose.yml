version: '3.7'

networks:
  wp-lan:

volumes:
  mysql_db:

services:
  nginx:
    build: 
      context: .
      dockerfile: nginx.Dockerfile
    hostname: ${COMPOSE_PROJECT_NAME}-nginx
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    volumes:
      - "./wp:${NGINX_ROOT_DIR}"
    ports:
      - 80:80
    networks:
      - wp-lan
    depends_on:
      - php-fpm
#    logging:
#      driver: journald

  php-fpm:
    image: php:7.2-fpm-alpine3.8
    hostname: ${COMPOSE_PROJECT_NAME}-php-fpm
    container_name: ${COMPOSE_PROJECT_NAME}-php-fpm
    volumes:
      - "./wp:${NGINX_ROOT_DIR}"
    networks:
      - wp-lan
    restart: always
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    hostname: ${COMPOSE_PROJECT_NAME}-mysql
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#    env_file: .env
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - "mysql_db:/var/lib/mysql"
#      - ./orig/c0alpkr.sql:/docker-entrypoint-initdb.d/wp.sql # change permissions to 755
    networks:
      - wp-lan
    restart: always
#    logging:
#      driver: none

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    hostname: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - 8888:80
    networks:
      - wp-lan
    depends_on:
      - mysql
    logging:
      driver: none


